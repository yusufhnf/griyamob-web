define(['dart_sdk', 'packages/flutter_svg/src/picture_stream.dart', 'packages/flutter_svg/src/svg/xml_parsers.dart', 'packages/flutter_svg/parser.dart', 'packages/flutter/src/painting/box_fit.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter_svg/src/picture_provider.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter_svg/src/render_picture.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/proxy_box.dart', 'packages/flutter/src/rendering/layer.dart'], (function load__packages__flutter_svg__svg_dart(dart_sdk, packages__flutter_svg__src__picture_stream$46dart, packages__flutter_svg__src__svg__xml_parsers$46dart, packages__flutter_svg__parser$46dart, packages__flutter__src__painting__box_fit$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter_svg__src__picture_provider$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter_svg__src__render_picture$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__proxy_box$46dart, packages__flutter__src__rendering__layer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const convert = dart_sdk.convert;
  const typed_data = dart_sdk.typed_data;
  const ui = dart_sdk.ui;
  const _engine = dart_sdk._engine;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const picture_stream = packages__flutter_svg__src__picture_stream$46dart.src__picture_stream;
  const vector_drawable = packages__flutter_svg__src__svg__xml_parsers$46dart.src__vector_drawable;
  const parser$ = packages__flutter_svg__parser$46dart.parser;
  const box_fit = packages__flutter__src__painting__box_fit$46dart.src__painting__box_fit;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const picture_provider = packages__flutter_svg__src__picture_provider$46dart.src__picture_provider;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const ticker_provider = packages__flutter__src__widgets__widget_span$46dart.src__widgets__ticker_provider;
  const render_picture = packages__flutter_svg__src__render_picture$46dart.src__render_picture;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  var svg = Object.create(dart.library);
  var PictureInfoL = () => (PictureInfoL = dart.constFn(dart.legacy(picture_stream.PictureInfo)))();
  var DrawableRootL = () => (DrawableRootL = dart.constFn(dart.legacy(vector_drawable.DrawableRoot)))();
  var _LocationL = () => (_LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))();
  var LimitedBoxL = () => (LimitedBoxL = dart.constFn(dart.legacy(basic.LimitedBox)))();
  var BuildContextL = () => (BuildContextL = dart.constFn(dart.legacy(framework.BuildContext)))();
  var BuildContextLToLimitedBoxL = () => (BuildContextLToLimitedBoxL = dart.constFn(dart.fnType(LimitedBoxL(), [BuildContextL()])))();
  var FutureOfPictureInfoL = () => (FutureOfPictureInfoL = dart.constFn(async.Future$(PictureInfoL())))();
  var FutureLOfPictureInfoL = () => (FutureLOfPictureInfoL = dart.constFn(dart.legacy(FutureOfPictureInfoL())))();
  var Uint8ListL = () => (Uint8ListL = dart.constFn(dart.legacy(typed_data.Uint8List)))();
  var ColorFilterL = () => (ColorFilterL = dart.constFn(dart.legacy(ui.ColorFilter)))();
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var Uint8ListLAndColorFilterLAndStringLToFutureLOfPictureInfoL = () => (Uint8ListLAndColorFilterLAndStringLToFutureLOfPictureInfoL = dart.constFn(dart.fnType(FutureLOfPictureInfoL(), [Uint8ListL(), ColorFilterL(), StringL()])))();
  var StringLAndColorFilterLAndStringLToFutureLOfPictureInfoL = () => (StringLAndColorFilterLAndStringLToFutureLOfPictureInfoL = dart.constFn(dart.fnType(FutureLOfPictureInfoL(), [StringL(), ColorFilterL(), StringL()])))();
  var SvgPictureL = () => (SvgPictureL = dart.constFn(dart.legacy(svg.SvgPicture)))();
  var VoidToNull = () => (VoidToNull = dart.constFn(dart.fnType(core.Null, [])))();
  var WidgetL = () => (WidgetL = dart.constFn(dart.legacy(framework.Widget)))();
  var WidgetLToWidgetL = () => (WidgetLToWidgetL = dart.constFn(dart.fnType(WidgetL(), [WidgetL()])))();
  var PictureStreamL = () => (PictureStreamL = dart.constFn(dart.legacy(picture_stream.PictureStream)))();
  var DiagnosticsPropertyOfPictureStreamL = () => (DiagnosticsPropertyOfPictureStreamL = dart.constFn(diagnostics.DiagnosticsProperty$(PictureStreamL())))();
  var _UnboundedColorFilteredRenderBoxL = () => (_UnboundedColorFilteredRenderBoxL = dart.constFn(dart.legacy(svg._UnboundedColorFilteredRenderBox)))();
  var CompleterOfvoid = () => (CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var PictureInfoLAndboolLTovoid = () => (PictureInfoLAndboolLTovoid = dart.constFn(dart.fnType(dart.void, [PictureInfoL(), boolL()])))();
  var StackTraceL = () => (StackTraceL = dart.constFn(dart.legacy(core.StackTrace)))();
  var dynamicAndStackTraceLTovoid = () => (dynamicAndStackTraceLTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, StackTraceL()])))();
  const CT = Object.create(null);
  var L0 = "package:flutter_svg/svg.dart";
  var L1 = "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: box_fit.BoxFit.prototype,
        [_name]: "BoxFit.contain",
        index: 1
      });
    },
    get C1() {
      return C1 = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: ui.Clip.prototype,
        [_name$]: "Clip.hardEdge",
        index: 1
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: ui.BlendMode.prototype,
        [_name$]: "BlendMode.srcIn",
        index: 5
      });
    },
    get C6() {
      return C6 = dart.constList([], _LocationL());
    },
    get C5() {
      return C5 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C6 || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 35,
        [_Location_line]: 529,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C4() {
      return C4 = dart.const({
        __proto__: basic.LimitedBox.prototype,
        [Widget__location]: C5 || CT.C5,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [LimitedBox_maxHeight]: 1 / 0,
        [LimitedBox_maxWidth]: 1 / 0
      });
    },
    get C9() {
      return C9 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "container",
        [_Location_column]: 9,
        [_Location_line]: 723,
        [_Location_file]: null
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "image",
        [_Location_column]: 9,
        [_Location_line]: 724,
        [_Location_file]: null
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 9,
        [_Location_line]: 725,
        [_Location_file]: null
      });
    },
    get C12() {
      return C12 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 726,
        [_Location_file]: null
      });
    },
    get C8() {
      return C8 = dart.constList([C9 || CT.C9, C10 || CT.C10, C11 || CT.C11, C12 || CT.C12], _LocationL());
    },
    get C7() {
      return C7 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C8 || CT.C8,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 722,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C15() {
      return C15 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "colorFilter",
        [_Location_column]: 9,
        [_Location_line]: 735,
        [_Location_file]: null
      });
    },
    get C16() {
      return C16 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 736,
        [_Location_file]: null
      });
    },
    get C14() {
      return C14 = dart.constList([C15 || CT.C15, C16 || CT.C16], _LocationL());
    },
    get C13() {
      return C13 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C14 || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 734,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C19() {
      return C19 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "picture",
        [_Location_column]: 19,
        [_Location_line]: 766,
        [_Location_file]: null
      });
    },
    get C20() {
      return C20 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "matchTextDirection",
        [_Location_column]: 19,
        [_Location_line]: 767,
        [_Location_file]: null
      });
    },
    get C21() {
      return C21 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "allowDrawingOutsideViewBox",
        [_Location_column]: 19,
        [_Location_line]: 768,
        [_Location_file]: null
      });
    },
    get C18() {
      return C18 = dart.constList([C19 || CT.C19, C20 || CT.C20, C21 || CT.C21], _LocationL());
    },
    get C17() {
      return C17 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C18 || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 765,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C24() {
      return C24 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "size",
        [_Location_column]: 17,
        [_Location_line]: 764,
        [_Location_file]: null
      });
    },
    get C25() {
      return C25 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 765,
        [_Location_file]: null
      });
    },
    get C23() {
      return C23 = dart.constList([C24 || CT.C24, C25 || CT.C25], _LocationL());
    },
    get C22() {
      return C22 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C23 || CT.C23,
        [_Location_name]: null,
        [_Location_column]: 31,
        [_Location_line]: 763,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C28() {
      return C28 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "fit",
        [_Location_column]: 15,
        [_Location_line]: 760,
        [_Location_file]: null
      });
    },
    get C29() {
      return C29 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 15,
        [_Location_line]: 761,
        [_Location_file]: null
      });
    },
    get C30() {
      return C30 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 15,
        [_Location_line]: 762,
        [_Location_file]: null
      });
    },
    get C31() {
      return C31 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 15,
        [_Location_line]: 763,
        [_Location_file]: null
      });
    },
    get C27() {
      return C27 = dart.constList([C28 || CT.C28, C29 || CT.C29, C30 || CT.C30, C31 || CT.C31], _LocationL());
    },
    get C26() {
      return C26 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C27 || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 759,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C34() {
      return C34 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 13,
        [_Location_line]: 757,
        [_Location_file]: null
      });
    },
    get C35() {
      return C35 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 13,
        [_Location_line]: 758,
        [_Location_file]: null
      });
    },
    get C36() {
      return C36 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 759,
        [_Location_file]: null
      });
    },
    get C33() {
      return C33 = dart.constList([C34 || CT.C34, C35 || CT.C35, C36 || CT.C36], _LocationL());
    },
    get C32() {
      return C32 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C33 || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 11,
        [_Location_line]: 756,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    },
    get C39() {
      return C39 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 23,
        [_Location_line]: 787,
        [_Location_file]: null
      });
    },
    get C40() {
      return C40 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 37,
        [_Location_line]: 787,
        [_Location_file]: null
      });
    },
    get C38() {
      return C38 = dart.constList([C39 || CT.C39, C40 || CT.C40], _LocationL());
    },
    get C37() {
      return C37 = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C38 || CT.C38,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 787,
        [_Location_file]: "file:///C:/Users/MKM/AppData/Local/Pub/Cache/hosted/pub.dartlang.org/flutter_svg-0.19.1/lib/svg.dart"
      });
    }
  }, false);
  svg.Svg = class Svg extends core.Object {
    svgPictureDecoder(raw, allowDrawingOutsideOfViewBox, colorFilter, key) {
      return async.async(PictureInfoL(), (function* svgPictureDecoder() {
        let svgRoot = (yield this.fromSvgBytes(raw, key));
        let pic = svgRoot.toPicture({clipToViewBox: dart.equals(allowDrawingOutsideOfViewBox, true) ? false : true, colorFilter: colorFilter});
        return new picture_stream.PictureInfo.new({picture: pic, viewport: svgRoot.viewport.viewBoxRect, size: svgRoot.viewport.size});
      }).bind(this));
    }
    svgPictureStringDecoder(raw, allowDrawingOutsideOfViewBox, colorFilter, key) {
      return async.async(PictureInfoL(), (function* svgPictureStringDecoder() {
        let svg = (yield this.fromSvgString(raw, key));
        return new picture_stream.PictureInfo.new({picture: svg.toPicture({clipToViewBox: dart.equals(allowDrawingOutsideOfViewBox, true) ? false : true, colorFilter: colorFilter, size: svg.viewport.viewBox}), viewport: svg.viewport.viewBoxRect, size: svg.viewport.size});
      }).bind(this));
    }
    fromSvgBytes(raw, key) {
      return async.async(DrawableRootL(), (function* fromSvgBytes() {
        return this.fromSvgString(convert.utf8.decode(raw), key);
      }).bind(this));
    }
    fromSvgString(rawSvg, key) {
      return async.async(DrawableRootL(), function* fromSvgString() {
        let parser = new parser$.SvgParser.new();
        return yield parser.parse(rawSvg, {key: key});
      });
    }
  };
  (svg.Svg.__ = function() {
    ;
  }).prototype = svg.Svg.prototype;
  dart.addTypeTests(svg.Svg);
  dart.addTypeCaches(svg.Svg);
  dart.setMethodSignature(svg.Svg, () => ({
    __proto__: dart.getMethods(svg.Svg.__proto__),
    svgPictureDecoder: dart.fnType(dart.legacy(async.Future$(dart.legacy(picture_stream.PictureInfo))), [dart.legacy(typed_data.Uint8List), dart.legacy(core.bool), dart.legacy(ui.ColorFilter), dart.legacy(core.String)]),
    svgPictureStringDecoder: dart.fnType(dart.legacy(async.Future$(dart.legacy(picture_stream.PictureInfo))), [dart.legacy(core.String), dart.legacy(core.bool), dart.legacy(ui.ColorFilter), dart.legacy(core.String)]),
    fromSvgBytes: dart.fnType(dart.legacy(async.Future$(dart.legacy(vector_drawable.DrawableRoot))), [dart.legacy(typed_data.Uint8List), dart.legacy(core.String)]),
    fromSvgString: dart.fnType(dart.legacy(async.Future$(dart.legacy(vector_drawable.DrawableRoot))), [dart.legacy(core.String), dart.legacy(core.String)])
  }));
  dart.setLibraryUri(svg.Svg, L0);
  var _name = dart.privateName(box_fit, "_name");
  var C0;
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var C1;
  var _name$ = dart.privateName(ui, "_name");
  var C2;
  var C3;
  var width$ = dart.privateName(svg, "SvgPicture.width");
  var height$ = dart.privateName(svg, "SvgPicture.height");
  var fit$ = dart.privateName(svg, "SvgPicture.fit");
  var alignment$ = dart.privateName(svg, "SvgPicture.alignment");
  var pictureProvider$ = dart.privateName(svg, "SvgPicture.pictureProvider");
  var placeholderBuilder$ = dart.privateName(svg, "SvgPicture.placeholderBuilder");
  var matchTextDirection$ = dart.privateName(svg, "SvgPicture.matchTextDirection");
  var allowDrawingOutsideViewBox$ = dart.privateName(svg, "SvgPicture.allowDrawingOutsideViewBox");
  var semanticsLabel$ = dart.privateName(svg, "SvgPicture.semanticsLabel");
  var excludeFromSemantics$ = dart.privateName(svg, "SvgPicture.excludeFromSemantics");
  var clipBehavior$ = dart.privateName(svg, "SvgPicture.clipBehavior");
  var colorFilter$ = dart.privateName(svg, "SvgPicture.colorFilter");
  var C6;
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var C5;
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var LimitedBox_maxHeight = dart.privateName(basic, "LimitedBox.maxHeight");
  var LimitedBox_maxWidth = dart.privateName(basic, "LimitedBox.maxWidth");
  var C4;
  svg.SvgPicture = class SvgPicture extends framework.StatefulWidget {
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get fit() {
      return this[fit$];
    }
    set fit(value) {
      super.fit = value;
    }
    get alignment() {
      return this[alignment$];
    }
    set alignment(value) {
      super.alignment = value;
    }
    get pictureProvider() {
      return this[pictureProvider$];
    }
    set pictureProvider(value) {
      super.pictureProvider = value;
    }
    get placeholderBuilder() {
      return this[placeholderBuilder$];
    }
    set placeholderBuilder(value) {
      super.placeholderBuilder = value;
    }
    get matchTextDirection() {
      return this[matchTextDirection$];
    }
    set matchTextDirection(value) {
      super.matchTextDirection = value;
    }
    get allowDrawingOutsideViewBox() {
      return this[allowDrawingOutsideViewBox$];
    }
    set allowDrawingOutsideViewBox(value) {
      super.allowDrawingOutsideViewBox = value;
    }
    get semanticsLabel() {
      return this[semanticsLabel$];
    }
    set semanticsLabel(value) {
      super.semanticsLabel = value;
    }
    get excludeFromSemantics() {
      return this[excludeFromSemantics$];
    }
    set excludeFromSemantics(value) {
      super.excludeFromSemantics = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get colorFilter() {
      return this[colorFilter$];
    }
    set colorFilter(value) {
      super.colorFilter = value;
    }
    static _getColorFilter(color, colorBlendMode) {
      let t0;
      return color == null ? null : new _engine._CkBlendModeColorFilter.new(color, (t0 = colorBlendMode, t0 == null ? ui.BlendMode.srcIn : t0));
    }
    createState() {
      return new svg._SvgPictureState.new();
    }
  };
  (svg.SvgPicture.new = function(pictureProvider, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let allowDrawingOutsideViewBox = opts && 'allowDrawingOutsideViewBox' in opts ? opts.allowDrawingOutsideViewBox : false;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C2 || CT.C2;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[pictureProvider$] = pictureProvider;
    this[width$] = width;
    this[height$] = height;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[matchTextDirection$] = matchTextDirection;
    this[allowDrawingOutsideViewBox$] = allowDrawingOutsideViewBox;
    this[placeholderBuilder$] = placeholderBuilder;
    this[semanticsLabel$] = semanticsLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[clipBehavior$] = clipBehavior;
    this[colorFilter$] = colorFilter;
    svg.SvgPicture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg.SvgPicture.prototype;
  (svg.SvgPicture.asset = function(assetName, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let bundle = opts && 'bundle' in opts ? opts.bundle : null;
    let $package = opts && 'package' in opts ? opts.package : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let allowDrawingOutsideViewBox = opts && 'allowDrawingOutsideViewBox' in opts ? opts.allowDrawingOutsideViewBox : false;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : C3 || CT.C3;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C2 || CT.C2;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[matchTextDirection$] = matchTextDirection;
    this[width$] = width;
    this[height$] = height;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[allowDrawingOutsideViewBox$] = allowDrawingOutsideViewBox;
    this[placeholderBuilder$] = placeholderBuilder;
    this[semanticsLabel$] = semanticsLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[clipBehavior$] = clipBehavior;
    this[pictureProvider$] = new picture_provider.ExactAssetPicture.new(dart.equals(allowDrawingOutsideViewBox, true) ? svg.SvgPicture.svgStringDecoderOutsideViewBox : svg.SvgPicture.svgStringDecoder, assetName, {bundle: bundle, package: $package});
    this[colorFilter$] = svg.SvgPicture._getColorFilter(color, colorBlendMode);
    svg.SvgPicture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg.SvgPicture.prototype;
  (svg.SvgPicture.network = function(url, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let allowDrawingOutsideViewBox = opts && 'allowDrawingOutsideViewBox' in opts ? opts.allowDrawingOutsideViewBox : false;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : C3 || CT.C3;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C2 || CT.C2;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = width;
    this[height$] = height;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[matchTextDirection$] = matchTextDirection;
    this[allowDrawingOutsideViewBox$] = allowDrawingOutsideViewBox;
    this[placeholderBuilder$] = placeholderBuilder;
    this[semanticsLabel$] = semanticsLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[clipBehavior$] = clipBehavior;
    this[pictureProvider$] = new picture_provider.NetworkPicture.new(dart.equals(allowDrawingOutsideViewBox, true) ? svg.SvgPicture.svgByteDecoderOutsideViewBox : svg.SvgPicture.svgByteDecoder, url, {headers: headers});
    this[colorFilter$] = svg.SvgPicture._getColorFilter(color, colorBlendMode);
    svg.SvgPicture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg.SvgPicture.prototype;
  (svg.SvgPicture.file = function(file, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let allowDrawingOutsideViewBox = opts && 'allowDrawingOutsideViewBox' in opts ? opts.allowDrawingOutsideViewBox : false;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : C3 || CT.C3;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C2 || CT.C2;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = width;
    this[height$] = height;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[matchTextDirection$] = matchTextDirection;
    this[allowDrawingOutsideViewBox$] = allowDrawingOutsideViewBox;
    this[placeholderBuilder$] = placeholderBuilder;
    this[semanticsLabel$] = semanticsLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[clipBehavior$] = clipBehavior;
    this[pictureProvider$] = new picture_provider.FilePicture.new(dart.equals(allowDrawingOutsideViewBox, true) ? svg.SvgPicture.svgByteDecoderOutsideViewBox : svg.SvgPicture.svgByteDecoder, file);
    this[colorFilter$] = svg.SvgPicture._getColorFilter(color, colorBlendMode);
    svg.SvgPicture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg.SvgPicture.prototype;
  (svg.SvgPicture.memory = function(bytes, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let allowDrawingOutsideViewBox = opts && 'allowDrawingOutsideViewBox' in opts ? opts.allowDrawingOutsideViewBox : false;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : C3 || CT.C3;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C2 || CT.C2;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = width;
    this[height$] = height;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[matchTextDirection$] = matchTextDirection;
    this[allowDrawingOutsideViewBox$] = allowDrawingOutsideViewBox;
    this[placeholderBuilder$] = placeholderBuilder;
    this[semanticsLabel$] = semanticsLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[clipBehavior$] = clipBehavior;
    this[pictureProvider$] = new picture_provider.MemoryPicture.new(dart.equals(allowDrawingOutsideViewBox, true) ? svg.SvgPicture.svgByteDecoderOutsideViewBox : svg.SvgPicture.svgByteDecoder, bytes);
    this[colorFilter$] = svg.SvgPicture._getColorFilter(color, colorBlendMode);
    svg.SvgPicture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg.SvgPicture.prototype;
  (svg.SvgPicture.string = function(bytes, opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let fit = opts && 'fit' in opts ? opts.fit : C0 || CT.C0;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C1 || CT.C1;
    let matchTextDirection = opts && 'matchTextDirection' in opts ? opts.matchTextDirection : false;
    let allowDrawingOutsideViewBox = opts && 'allowDrawingOutsideViewBox' in opts ? opts.allowDrawingOutsideViewBox : false;
    let placeholderBuilder = opts && 'placeholderBuilder' in opts ? opts.placeholderBuilder : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : C3 || CT.C3;
    let semanticsLabel = opts && 'semanticsLabel' in opts ? opts.semanticsLabel : null;
    let excludeFromSemantics = opts && 'excludeFromSemantics' in opts ? opts.excludeFromSemantics : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C2 || CT.C2;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[width$] = width;
    this[height$] = height;
    this[fit$] = fit;
    this[alignment$] = alignment;
    this[matchTextDirection$] = matchTextDirection;
    this[allowDrawingOutsideViewBox$] = allowDrawingOutsideViewBox;
    this[placeholderBuilder$] = placeholderBuilder;
    this[semanticsLabel$] = semanticsLabel;
    this[excludeFromSemantics$] = excludeFromSemantics;
    this[clipBehavior$] = clipBehavior;
    this[pictureProvider$] = new picture_provider.StringPicture.new(dart.equals(allowDrawingOutsideViewBox, true) ? svg.SvgPicture.svgStringDecoderOutsideViewBox : svg.SvgPicture.svgStringDecoder, bytes);
    this[colorFilter$] = svg.SvgPicture._getColorFilter(color, colorBlendMode);
    svg.SvgPicture.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg.SvgPicture.prototype;
  dart.addTypeTests(svg.SvgPicture);
  dart.addTypeCaches(svg.SvgPicture);
  dart.setMethodSignature(svg.SvgPicture, () => ({
    __proto__: dart.getMethods(svg.SvgPicture.__proto__),
    createState: dart.fnType(dart.legacy(framework.State$(dart.legacy(svg.SvgPicture))), [])
  }));
  dart.setLibraryUri(svg.SvgPicture, L0);
  dart.setFieldSignature(svg.SvgPicture, () => ({
    __proto__: dart.getFields(svg.SvgPicture.__proto__),
    width: dart.finalFieldType(dart.legacy(core.double)),
    height: dart.finalFieldType(dart.legacy(core.double)),
    fit: dart.finalFieldType(dart.legacy(box_fit.BoxFit)),
    alignment: dart.finalFieldType(dart.legacy(alignment.AlignmentGeometry)),
    pictureProvider: dart.finalFieldType(dart.legacy(picture_provider.PictureProvider)),
    placeholderBuilder: dart.finalFieldType(dart.legacy(dart.fnType(framework.Widget, [framework.BuildContext]))),
    matchTextDirection: dart.finalFieldType(dart.legacy(core.bool)),
    allowDrawingOutsideViewBox: dart.finalFieldType(dart.legacy(core.bool)),
    semanticsLabel: dart.finalFieldType(dart.legacy(core.String)),
    excludeFromSemantics: dart.finalFieldType(dart.legacy(core.bool)),
    clipBehavior: dart.finalFieldType(dart.legacy(ui.Clip)),
    colorFilter: dart.finalFieldType(dart.legacy(ui.ColorFilter))
  }));
  dart.defineLazy(svg.SvgPicture, {
    /*svg.SvgPicture.defaultPlaceholderBuilder*/get defaultPlaceholderBuilder() {
      return dart.fn(ctx => C4 || CT.C4, BuildContextLToLimitedBoxL());
    },
    set defaultPlaceholderBuilder(_) {},
    /*svg.SvgPicture.svgByteDecoder*/get svgByteDecoder() {
      return dart.fn((bytes, colorFilter, key) => svg.svg.svgPictureDecoder(bytes, false, colorFilter, key), Uint8ListLAndColorFilterLAndStringLToFutureLOfPictureInfoL());
    },
    /*svg.SvgPicture.svgStringDecoder*/get svgStringDecoder() {
      return dart.fn((data, colorFilter, key) => svg.svg.svgPictureStringDecoder(data, false, colorFilter, key), StringLAndColorFilterLAndStringLToFutureLOfPictureInfoL());
    },
    /*svg.SvgPicture.svgByteDecoderOutsideViewBox*/get svgByteDecoderOutsideViewBox() {
      return dart.fn((bytes, colorFilter, key) => svg.svg.svgPictureDecoder(bytes, true, colorFilter, key), Uint8ListLAndColorFilterLAndStringLToFutureLOfPictureInfoL());
    },
    /*svg.SvgPicture.svgStringDecoderOutsideViewBox*/get svgStringDecoderOutsideViewBox() {
      return dart.fn((data, colorFilter, key) => svg.svg.svgPictureStringDecoder(data, true, colorFilter, key), StringLAndColorFilterLAndStringLToFutureLOfPictureInfoL());
    }
  }, true);
  var _picture = dart.privateName(svg, "_picture");
  var _pictureStream = dart.privateName(svg, "_pictureStream");
  var _isListeningToStream = dart.privateName(svg, "_isListeningToStream");
  var _resolveImage = dart.privateName(svg, "_resolveImage");
  var _listenToStream = dart.privateName(svg, "_listenToStream");
  var _stopListeningToStream = dart.privateName(svg, "_stopListeningToStream");
  var _updateSourceStream = dart.privateName(svg, "_updateSourceStream");
  var _handleImageChanged = dart.privateName(svg, "_handleImageChanged");
  var C9;
  var C10;
  var C11;
  var C12;
  var C8;
  var C7;
  var C15;
  var C16;
  var C14;
  var C13;
  var C19;
  var C20;
  var C21;
  var C18;
  var C17;
  var C24;
  var C25;
  var C23;
  var C22;
  var C28;
  var C29;
  var C30;
  var C31;
  var C27;
  var C26;
  var C34;
  var C35;
  var C36;
  var C33;
  var C32;
  var _getDefaultPlaceholder = dart.privateName(svg, "_getDefaultPlaceholder");
  var C39;
  var C40;
  var C38;
  var C37;
  svg._SvgPictureState = class _SvgPictureState extends framework.State$(dart.legacy(svg.SvgPicture)) {
    didChangeDependencies() {
      this[_resolveImage]();
      if (dart.test(ticker_provider.TickerMode.of(this.context))) {
        this[_listenToStream]();
      } else {
        this[_stopListeningToStream]();
      }
      super.didChangeDependencies();
    }
    didUpdateWidget(oldWidget) {
      SvgPictureL().as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (!dart.equals(this.widget.pictureProvider, oldWidget.pictureProvider)) {
        this[_resolveImage]();
      }
    }
    reassemble() {
      this[_resolveImage]();
      super.reassemble();
    }
    [_resolveImage]() {
      let newStream = this.widget.pictureProvider.resolve(picture_provider.createLocalPictureConfiguration(this.context));
      if (!(newStream != null)) dart.assertFailed(null, L1, 666, 12, "newStream != null");
      this[_updateSourceStream](newStream);
    }
    [_handleImageChanged](imageInfo, synchronousCall) {
      this.setState(dart.fn(() => {
        this[_picture] = imageInfo;
      }, VoidToNull()));
    }
    [_updateSourceStream](newStream) {
      let t0, t0$;
      if (dart.equals((t0 = this[_pictureStream], t0 == null ? null : t0.key), (t0$ = newStream, t0$ == null ? null : t0$.key))) {
        return;
      }
      if (dart.test(this[_isListeningToStream])) this[_pictureStream].removeListener(dart.bind(this, _handleImageChanged));
      this[_pictureStream] = newStream;
      if (dart.test(this[_isListeningToStream])) {
        this[_pictureStream].addListener(dart.bind(this, _handleImageChanged));
      }
    }
    [_listenToStream]() {
      if (dart.test(this[_isListeningToStream])) {
        return;
      }
      this[_pictureStream].addListener(dart.bind(this, _handleImageChanged));
      this[_isListeningToStream] = true;
    }
    [_stopListeningToStream]() {
      if (!dart.test(this[_isListeningToStream])) {
        return;
      }
      this[_pictureStream].removeListener(dart.bind(this, _handleImageChanged));
      this[_isListeningToStream] = false;
    }
    dispose() {
      if (!(this[_pictureStream] != null)) dart.assertFailed(null, L1, 711, 12, "_pictureStream != null");
      this[_stopListeningToStream]();
      super.dispose();
    }
    build(context) {
      let t1, t0;
      const _maybeWrapWithSemantics = child => {
        if (dart.test(this.widget.excludeFromSemantics)) {
          return child;
        }
        return new basic.Semantics.new({container: this.widget.semanticsLabel != null, image: true, label: this.widget.semanticsLabel == null ? "" : this.widget.semanticsLabel, child: child, $creationLocationd_0dea112b090073317d4: C7 || CT.C7});
      };
      dart.fn(_maybeWrapWithSemantics, WidgetLToWidgetL());
      const _maybeWrapColorFilter = child => {
        if (this.widget.colorFilter == null) {
          return child;
        }
        return new svg._UnboundedColorFiltered.new({colorFilter: this.widget.colorFilter, child: child, $creationLocationd_0dea112b090073317d4: C13 || CT.C13});
      };
      dart.fn(_maybeWrapColorFilter, WidgetLToWidgetL());
      if (this[_picture] != null) {
        let viewport = ui.Offset.zero['&'](this[_picture].viewport.size);
        let width = this.widget.width;
        let height = this.widget.height;
        if (width == null && height == null) {
          width = viewport.width;
          height = viewport.height;
        } else if (height != null) {
          width = dart.notNull(height) / dart.notNull(viewport.height) * dart.notNull(viewport.width);
        } else if (width != null) {
          height = dart.notNull(width) / dart.notNull(viewport.width) * dart.notNull(viewport.height);
        }
        return _maybeWrapWithSemantics(_maybeWrapColorFilter(new basic.SizedBox.new({width: width, height: height, child: new basic.FittedBox.new({fit: this.widget.fit, alignment: this.widget.alignment, clipBehavior: this.widget.clipBehavior, child: new basic.SizedBox.fromSize({size: viewport.size, child: new render_picture.RawPicture.new(this[_picture], {matchTextDirection: this.widget.matchTextDirection, allowDrawingOutsideViewBox: this.widget.allowDrawingOutsideViewBox, $creationLocationd_0dea112b090073317d4: C17 || CT.C17}), $creationLocationd_0dea112b090073317d4: C22 || CT.C22}), $creationLocationd_0dea112b090073317d4: C26 || CT.C26}), $creationLocationd_0dea112b090073317d4: C32 || CT.C32})));
      }
      return _maybeWrapWithSemantics(this.widget.placeholderBuilder == null ? this[_getDefaultPlaceholder](context, this.widget.width, this.widget.height) : (t0 = this.widget, t1 = context, t0.placeholderBuilder(t1)));
    }
    [_getDefaultPlaceholder](context, width, height) {
      if (width != null || height != null) {
        return new basic.SizedBox.new({width: width, height: height, $creationLocationd_0dea112b090073317d4: C37 || CT.C37});
      }
      return svg.SvgPicture.defaultPlaceholderBuilder(context);
    }
    debugFillProperties(description) {
      super.debugFillProperties(description);
      description.add(new (DiagnosticsPropertyOfPictureStreamL()).new("stream", this[_pictureStream]));
    }
  };
  (svg._SvgPictureState.new = function() {
    this[_picture] = null;
    this[_pictureStream] = null;
    this[_isListeningToStream] = false;
    svg._SvgPictureState.__proto__.new.call(this);
    ;
  }).prototype = svg._SvgPictureState.prototype;
  dart.addTypeTests(svg._SvgPictureState);
  dart.addTypeCaches(svg._SvgPictureState);
  dart.setMethodSignature(svg._SvgPictureState, () => ({
    __proto__: dart.getMethods(svg._SvgPictureState.__proto__),
    didUpdateWidget: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    [_resolveImage]: dart.fnType(dart.void, []),
    [_handleImageChanged]: dart.fnType(dart.void, [dart.legacy(picture_stream.PictureInfo), dart.legacy(core.bool)]),
    [_updateSourceStream]: dart.fnType(dart.void, [dart.legacy(picture_stream.PictureStream)]),
    [_listenToStream]: dart.fnType(dart.void, []),
    [_stopListeningToStream]: dart.fnType(dart.void, []),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)]),
    [_getDefaultPlaceholder]: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(core.double), dart.legacy(core.double)]),
    debugFillProperties: dart.fnType(dart.void, [dart.legacy(diagnostics.DiagnosticPropertiesBuilder)])
  }));
  dart.setLibraryUri(svg._SvgPictureState, L0);
  dart.setFieldSignature(svg._SvgPictureState, () => ({
    __proto__: dart.getFields(svg._SvgPictureState.__proto__),
    [_picture]: dart.fieldType(dart.legacy(picture_stream.PictureInfo)),
    [_pictureStream]: dart.fieldType(dart.legacy(picture_stream.PictureStream)),
    [_isListeningToStream]: dart.fieldType(dart.legacy(core.bool))
  }));
  var colorFilter$0 = dart.privateName(svg, "_UnboundedColorFiltered.colorFilter");
  svg._UnboundedColorFiltered = class _UnboundedColorFiltered extends framework.SingleChildRenderObjectWidget {
    get colorFilter() {
      return this[colorFilter$0];
    }
    set colorFilter(value) {
      super.colorFilter = value;
    }
    createRenderObject(context) {
      return new svg._UnboundedColorFilteredRenderBox.new(this.colorFilter);
    }
    updateRenderObject(context, renderObject) {
      _UnboundedColorFilteredRenderBoxL().as(renderObject);
      renderObject.colorFilter = this.colorFilter;
    }
  };
  (svg._UnboundedColorFiltered.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let colorFilter = opts && 'colorFilter' in opts ? opts.colorFilter : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[colorFilter$0] = colorFilter;
    svg._UnboundedColorFiltered.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = svg._UnboundedColorFiltered.prototype;
  dart.addTypeTests(svg._UnboundedColorFiltered);
  dart.addTypeCaches(svg._UnboundedColorFiltered);
  dart.setMethodSignature(svg._UnboundedColorFiltered, () => ({
    __proto__: dart.getMethods(svg._UnboundedColorFiltered.__proto__),
    createRenderObject: dart.fnType(dart.legacy(svg._UnboundedColorFilteredRenderBox), [dart.legacy(framework.BuildContext)]),
    updateRenderObject: dart.fnType(dart.void, [dart.legacy(framework.BuildContext), dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(svg._UnboundedColorFiltered, L0);
  dart.setFieldSignature(svg._UnboundedColorFiltered, () => ({
    __proto__: dart.getFields(svg._UnboundedColorFiltered.__proto__),
    colorFilter: dart.finalFieldType(dart.legacy(ui.ColorFilter))
  }));
  var _colorFilter$ = dart.privateName(svg, "_colorFilter");
  svg._UnboundedColorFilteredRenderBox = class _UnboundedColorFilteredRenderBox extends proxy_box.RenderProxyBox {
    get colorFilter() {
      return this[_colorFilter$];
    }
    set colorFilter(value) {
      if (dart.equals(value, this[_colorFilter$])) {
        return;
      }
      this[_colorFilter$] = value;
      this.markNeedsPaint();
    }
    paint(context, offset) {
      let t0;
      let paint = (t0 = ui.Paint.new(), (() => {
        t0.colorFilter = this.colorFilter;
        return t0;
      })());
      context.canvas.saveLayer(offset['&'](this.size), paint);
      if (this.child != null) {
        context.paintChild(this.child, offset);
      }
      context.canvas.restore();
    }
  };
  (svg._UnboundedColorFilteredRenderBox.new = function(_colorFilter) {
    this[_colorFilter$] = _colorFilter;
    svg._UnboundedColorFilteredRenderBox.__proto__.new.call(this);
    ;
  }).prototype = svg._UnboundedColorFilteredRenderBox.prototype;
  dart.addTypeTests(svg._UnboundedColorFilteredRenderBox);
  dart.addTypeCaches(svg._UnboundedColorFilteredRenderBox);
  dart.setMethodSignature(svg._UnboundedColorFilteredRenderBox, () => ({
    __proto__: dart.getMethods(svg._UnboundedColorFilteredRenderBox.__proto__),
    paint: dart.fnType(dart.void, [dart.legacy(object.PaintingContext), dart.legacy(ui.Offset)])
  }));
  dart.setGetterSignature(svg._UnboundedColorFilteredRenderBox, () => ({
    __proto__: dart.getGetters(svg._UnboundedColorFilteredRenderBox.__proto__),
    colorFilter: dart.legacy(ui.ColorFilter)
  }));
  dart.setSetterSignature(svg._UnboundedColorFilteredRenderBox, () => ({
    __proto__: dart.getSetters(svg._UnboundedColorFilteredRenderBox.__proto__),
    colorFilter: dart.legacy(ui.ColorFilter)
  }));
  dart.setLibraryUri(svg._UnboundedColorFilteredRenderBox, L0);
  dart.setFieldSignature(svg._UnboundedColorFilteredRenderBox, () => ({
    __proto__: dart.getFields(svg._UnboundedColorFilteredRenderBox.__proto__),
    [_colorFilter$]: dart.fieldType(dart.legacy(ui.ColorFilter))
  }));
  svg.precachePicture = function precachePicture(provider, context, opts) {
    let t0;
    let viewBox = opts && 'viewBox' in opts ? opts.viewBox : null;
    let colorFilterOverride = opts && 'colorFilterOverride' in opts ? opts.colorFilterOverride : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let colorBlendMode = opts && 'colorBlendMode' in opts ? opts.colorBlendMode : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let config = picture_provider.createLocalPictureConfiguration(context, {viewBox: viewBox, colorFilterOverride: colorFilterOverride, color: color, colorBlendMode: colorBlendMode});
    let completer = CompleterOfvoid().new();
    let stream = null;
    function listener(picture, synchronous) {
      let t0;
      completer.complete();
      t0 = stream;
      t0 == null ? null : t0.removeListener(listener);
    }
    dart.fn(listener, PictureInfoLAndboolLTovoid());
    function errorListener(exception, stackTrace) {
      let t0;
      if (onError != null) {
        onError(exception, stackTrace);
      } else {
        assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({context: new assertions.ErrorDescription.new("picture failed to precache"), library: "SVG", exception: exception, stack: stackTrace, silent: true}));
      }
      completer.complete();
      t0 = stream;
      t0 == null ? null : t0.removeListener(listener);
    }
    dart.fn(errorListener, dynamicAndStackTraceLTovoid());
    stream = (t0 = provider.resolve(config, {onError: errorListener}), (() => {
      t0.addListener(listener, {onError: errorListener});
      return t0;
    })());
    return completer.future;
  };
  dart.defineLazy(svg, {
    /*svg.svg*/get svg() {
      return new svg.Svg.__();
    }
  }, true);
  dart.trackLibraries("packages/flutter_svg/svg.dart", {
    "package:flutter_svg/svg.dart": svg
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["svg.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAwCc,KACL,8BACO,aACL;AAJ4B;AAMhB,uBAAU,MAAM,kBAAa,GAAG,EAAE,GAAG;AAC1C,kBAAM,AAAQ,OAAD,2BACmB,YAA7B,4BAA4B,EAAI,QAAO,QAAQ,mBACjD,WAAW;AAE1B,cAAO,8CACI,GAAG,YACF,AAAQ,AAAS,OAAV,6BACX,AAAQ,AAAS,OAAV;MAEjB;;4BAaW,KACF,8BACO,aACL;AAJgC;AAKtB,mBAAM,MAAM,mBAAc,GAAG,EAAE,GAAG;AACrD,cAAO,8CACI,AAAI,GAAD,2BACkC,YAA7B,4BAA4B,EAAI,QAAO,QAAQ,mBACjD,WAAW,QAClB,AAAI,AAAS,GAAV,+BAED,AAAI,AAAS,GAAV,6BACP,AAAI,AAAS,GAAV;MAEb;;iBAK4C,KAAY;AAAvB;AAM/B,cAAO,oBAAc,AAAK,oBAAO,GAAG,GAAG,GAAG;MAM5C;;kBAS0C,QAAe;AAAvB;AAChB,qBAAS;AACzB,cAAO,OAAM,AAAO,MAAD,OAAO,MAAM,QAAO,GAAG;MAC5C;;;;;EApFO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkhBM;;;;;;IAIA;;;;;;IAIA;;;;;;IAwBW;;;;;;IAGF;;;;;;IAGF;;;;;;IAGT;;;;;;IAIA;;;;;;IAME;;;;;;IAMF;;;;;;IAQA;;;;;;IAGO;;;;;;2BA/FuB,OAAiB;;AACtD,YAAA,AAAM,MAAD,IAAI,OACH,OACY,wCAAK,KAAK,GAAiB,KAAf,cAAc,QAAd,OAA4B;IAAM;;AA+FjC;IAAkB;;iCAza9C;QACD;QACC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAZA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF,kDAAW,GAAG;;EAAC;mCAgFX;QACH;QACC;QACO;QACL;QACF;QACA;QACA;QACA;QACA;QACA;QACC;QACI;QACL;QACA;QACA;;IAbA;IAGA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACe,yBAAE,2CACW,YAA3B,0BAA0B,EAAI,QACxB,gDACA,iCACN,SAAS,WACD,MAAM,WACL;IAEC,qBAAE,+BAAgB,KAAK,EAAE,cAAc;AACnD,kDAAW,GAAG;;EAAC;qCAgCZ;QACH;QACgB;QACf;QACA;QACA;QACA;QACA;QACA;QACA;QACC;QACI;QACL;QACA;QACA;;IAXA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACe,yBAAE,wCACW,YAA3B,0BAA0B,EAAI,QACxB,8CACA,+BACN,GAAG,YACM,OAAO;IAEN,qBAAE,+BAAgB,KAAK,EAAE,cAAc;AACnD,kDAAW,GAAG;;EAAC;kCA8Bd;QACD;QACC;QACA;QACA;QACA;QACA;QACA;QACA;QACC;QACI;QACL;QACA;QACA;;IAXA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACe,yBAAE,qCACW,YAA3B,0BAA0B,EAAI,QACxB,8CACA,+BACN,IAAI;IAEM,qBAAE,+BAAgB,KAAK,EAAE,cAAc;AACnD,kDAAW,GAAG;;EAAC;oCA2BT;QACN;QACC;QACA;QACA;QACA;QACA;QACA;QACA;QACC;QACI;QACL;QACA;QACA;;IAXA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACe,yBAAE,uCACW,YAA3B,0BAA0B,EAAI,QACxB,8CACA,+BACN,KAAK;IAEK,qBAAE,+BAAgB,KAAK,EAAE,cAAc;AACnD,kDAAW,GAAG;;EAAC;oCA2BZ;QAC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","file":"../../../../../../../../../../packages/flutter_svg/svg.dart.lib.js"}');
  // Exports:
  return {
    svg: svg
  };
}));

//# sourceMappingURL=svg.dart.lib.js.map
